generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["fullTextSearchPostgres"]
}

datasource db {
  provider     = "postgresql"
  url          = env("DATABASE_URL")
  relationMode = "prisma"
}

model Hotel {
  id                  String    @id @default(uuid())
  userid              String
  title               String
  description         String
  image               String
  country             String
  state               String
  city                String
  locationDescription String
  gym                 Boolean   @default(false)
  spa                 Boolean   @default(false)
  bar                 Boolean   @default(false)
  laundry             Boolean   @default(false)
  restaurant          Boolean   @default(false)
  shopping            Boolean   @default(false)
  freeparking         Boolean   @default(false)
  bikeRental          Boolean   @default(false)
  freeWifi           Boolean   @default(false)
  movieNights         Boolean   @default(false)
  swimmingPool         Boolean   @default(false)
  coffeeShop          Boolean   @default(false)
  addedAt             DateTime  @default(now())
  updatedAT           DateTime  @default(now())
  rooms               Room[]
  bookings            Booking[]
}

model Room {
  id             String    @id @default(uuid())
  title          String
  description    String
  bedCount       Int       @default(0)
  guestcount     Int       @default(0)
  bathroomcount  Int       @default(0)
  kingbed        Int       @default(0)
  queenbed       Int       @default(0)
  image          String
  breakfastprice Int
  roomprice      Int
  roomservice    Boolean   @default(false)
  TV             Boolean   @default(false)
  balcony        Boolean   @default(false)
  freewifi       Boolean   @default(false)
  cityview       Boolean   @default(false)
  oceanView      Boolean   @default(false)
  forestView     Boolean   @default(false)
  mountainView   Boolean   @default(false)
  aircondition   Boolean   @default(false)
  soundpoorfed   Boolean   @default(false)
  hotelId        String
  hotel          Hotel?    @relation(fields: [hotelId], references: [id], onDelete: Cascade)
  bookings       Booking[]

  @@index([hotelId])
}

model Booking {
  id                String   @id @default(uuid())
  username          String
  userID            String
  hotelId           String
  roomId            String
  hotelOwnerId      String
  startDate         DateTime
  enddate           DateTime
  breakFastIncluded Boolean
  currency          String
  totalprice        Int
  paymentStatus     Boolean  @default(false)
  paymentIntentId   String   @unique
  BookAt            DateTime @default(now())
  hotel             Hotel?   @relation(fields: [hotelId], references: [id])
  room              Room?    @relation(fields: [roomId], references: [id])

  @@index([hotelId])
  @@index([roomId])
}
